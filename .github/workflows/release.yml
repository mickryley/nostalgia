name: Build and Release on Tag

on:
  push:
    tags:
      - 'v*'
      - 'release-latest'

jobs:
  build-release:
    strategy:
      matrix:
        include:
          - os: windows-latest
            config_preset: windows-msvc
            build_preset: build-release-msvc
            zipname: nostalgia-win
          - os: macos-latest
            config_preset: macos-clang
            build_preset: build-release-macos
            zipname: nostalgia-mac
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest
        
      - name: Install Homebrew LLVM (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install llvm
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH
          
      - name: Install Vulkan SDK (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install vulkan-headers vulkan-loader molten-vk

      - name: Install Vulkan SDK
        uses: jakoch/install-vulkan-sdk-action@v1

      - name: Build using CMake preset
        run: |
          cmake --preset ${{ matrix.config_preset }}
          cmake --build --preset ${{ matrix.build_preset }}

      - name: Zip build output (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd build/${{ matrix.config_preset }}\Release
          Compress-Archive -Path * -DestinationPath ../../${{ matrix.zipname }}-${{ github.ref_name }}.zip

      - name: Zip build output (macOS/Linux)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd build/${{ matrix.config_preset }}/Release
          zip -r ../../${{ matrix.zipname }}-${{ github.ref_name }}.zip .


      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            build/${{ matrix.zipname }}-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
